{
  "_args": [
    [
      {
        "raw": "react-alert",
        "scope": null,
        "escapedName": "react-alert",
        "name": "react-alert",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/mint/source/repos/react-comp"
    ]
  ],
  "_from": "react-alert@latest",
  "_id": "react-alert@2.4.0",
  "_inCache": true,
  "_location": "/react-alert",
  "_nodeVersion": "8.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-alert-2.4.0.tgz_1507729531398_0.8042680348735303"
  },
  "_npmUser": {
    "name": "schiehll",
    "email": "rn.schiehll@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-alert",
    "scope": null,
    "escapedName": "react-alert",
    "name": "react-alert",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-alert/-/react-alert-2.4.0.tgz",
  "_shasum": "b4c9ce74919b46be330a7addbf46e7561c295bc7",
  "_shrinkwrap": null,
  "_spec": "react-alert",
  "_where": "/home/mint/source/repos/react-comp",
  "author": {
    "name": "Reinaldo Schiehll",
    "email": "rn.schiehll@gmail.com"
  },
  "babel": {
    "presets": [
      "es2015",
      "react",
      "stage-2"
    ]
  },
  "bugs": {
    "url": "https://github.com/schiehll/react-alert/issues"
  },
  "dependencies": {
    "glamor": "^2.20.24",
    "glamorous": "^3.13.1",
    "nanoid": "^0.2.2",
    "react-transition-group": "^1.1.2"
  },
  "description": "A simple react alert component",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-eslint": "^7.2.3",
    "babel-jest": "^19.0.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "coveralls": "^2.13.1",
    "enzyme": "^2.8.2",
    "jest-cli": "^19.0.2",
    "prop-types": "^15.5.8",
    "react": "^15.5.4",
    "react-dom": "^15.5.4",
    "react-test-renderer": "^15.5.4",
    "standard": "^10.0.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-zxnhxv0ENftUYBD1WdjaLEXSrNApeXizs4SldZ2cJZHcn27kY2Hnjo6Y1A8KIFcHe0yBGO+P5hnwnzoo81djIA==",
    "shasum": "b4c9ce74919b46be330a7addbf46e7561c295bc7",
    "tarball": "https://registry.npmjs.org/react-alert/-/react-alert-2.4.0.tgz"
  },
  "gitHead": "146a1cfe1c03efe9624c75a471fae27cda95faae",
  "homepage": "https://github.com/schiehll/react-alert#readme",
  "jest": {
    "coveragePathIgnorePatterns": [
      "<rootDir>/dist/"
    ]
  },
  "keywords": [
    "react",
    "alert",
    "react-alert",
    "toaster",
    "react-toaster",
    "react-component"
  ],
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "schiehll",
      "email": "rn.schiehll@gmail.com"
    }
  ],
  "name": "react-alert",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.5.4"
  },
  "readme": "# react-alert\n\n> A simple react alert (toaster style) component.\n\n[![travis build](https://img.shields.io/travis/schiehll/react-alert.svg?style=flat-square)](https://travis-ci.org/schiehll/react-alert)\n[![Coveralls branch](https://img.shields.io/coveralls/schiehll/react-alert/master.svg?style=flat-square)](https://coveralls.io/github/schiehll/react-alert?branch=master)\n[![version](https://img.shields.io/npm/v/react-alert.svg?style=flat-square)](http://npm.im/react-alert)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n\n## Demo\n\nYou can see a live demo [here](http://schiehll.github.io/react-alert/).\n\n## Installation\n\n```bash\n$ npm install react-alert\n```\n\n## Usage\n\nTo use it, you have to import the `AlertContainer` component, like this:\n\n```js\nimport React, {Component} from 'react'\nimport AlertContainer from 'react-alert'\n\nexport default class App extends Component {\n  alertOptions = {\n    offset: 14,\n    position: 'bottom left',\n    theme: 'dark',\n    time: 5000,\n    transition: 'scale'\n  }\n\n  showAlert = () => {\n    this.msg.show('Some text or component', {\n      time: 2000,\n      type: 'success',\n      icon: <img src=\"path/to/some/img/32x32.png\" />\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <AlertContainer ref={a => this.msg = a} {...this.alertOptions} />\n        <button onClick={this.showAlert}>Show Alert</button>\n      </div>\n    )\n  }\n}\n```\n\n## Api\n\nOnce you have the reference of the `AlertContainer` you can call the following methods:\n\n```js\n// show an alert\nthis.msg.show('Some message or component')\n// show an info alert\nthis.msg.info('Some info message or component')\n// show a success alert\nthis.msg.success('Some success message or component')\n// show an error alert\nthis.msg.error('Some error message or component')\n// removes all alerts from the page\nthis.msg.removeAll()\n```\n## Options\n\nThe `AlertContainer` component accepts the following props:\n\n```js\n{\n  // defaults\n  offset: 14, // the offset of the alert from the page border, can be any number\n  position: 'bottom left', // the position of the alert, can be [bottom left, bottom right, top left, top right]\n  theme: 'dark', // the color theme of the alert, can be [dark, light]\n  time: 5000, // the time in miliseconds to the alert close itself, use 0 to prevent auto close (apply to all alerts)\n  transition: 'scale' // the transition animation, can be [scale, fade]\n}\n```\n\nWhen you call `show`, `info`, `success` and `error` method, you can include the following options as a second parameter:\n\n```js\n{\n  time: 0, // the time in miliseconds to the alert close itself, use 0 to prevent auto close (apply to this alert only), default is 5000\n  icon: <img src=\"path/to/some/img/32x32.png\" />, // the icon to show in the alert, if none is given the default of each type will be showed\n  onClose: () => {} // the function called when message is closed\n}\n```\n\nWhen you call the `show` method, you can additionally include the `info` option:\n\n```js\n{\n  type: 'info' // the alert type, can be [info, success, error], default is info\n}\n```\n\n## Using React Components as alert content\n\nYou can also use a React Component to show an alert message, like this:\n\n```js\n// show an alert with a React Component as content\nthis.msg.show(<AComponent aProp=\"some message\" />)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/schiehll/react-alert.git"
  },
  "scripts": {
    "build": "babel src --out-dir dist --ignore *.spec.js,*.snap",
    "build:watch": "babel src --out-dir dist --watch --ignore *.spec.js,*.snap",
    "lint": "standard --fix",
    "test": "standard --fix && jest --coverage --no-cache",
    "test:watch": "standard --fix && jest --watch --coverage --no-cache"
  },
  "standard": {
    "parser": "babel-eslint",
    "globals": [
      "beforeEach",
      "test",
      "describe",
      "expect",
      "jest"
    ],
    "ignore": [
      "dist"
    ]
  },
  "version": "2.4.0"
}
